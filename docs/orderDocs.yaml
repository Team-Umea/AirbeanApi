paths:
  api/orders:
    post:
      tags:
        - Orders
      summary: Create a new order
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewOrder"
      responses:
        "201":
          description: Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  profile_id:
                    type: integer
                  total_amount:
                    type: number
                  order_status:
                    type: string
                  order_items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderItem"
                  estimatedDeliveryTime:
                    type: string
                    format: date-time
                    description: Estimated delivery time in ISO format
                  countdownSeconds:
                    type: integer
                    description: Seconds remaining until estimated delivery
              example:
                id: 123
                profile_id: 10
                total_amount: 199.99
                order_status: "pending"
                order_items:
                  - product_id: 101
                    quantity: 2
                    unit_price: 99.99
                estimatedDeliveryTime: "2025-05-21T13:45:00.000Z"
                countdownSeconds: 900
        "400":
          description: Invalid input

  api/orders/{id}:
    get:
      tags:
        - Orders
      summary: Get a specific order by ID
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Order found
        "404":
          description: Order not found

    delete:
      tags:
        - Orders
      summary: Delete an order
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Order deleted
        "404":
          description: Order not found

  api/orders/{orderId}/full:
    get:
      tags:
        - Orders
      summary: Get full order details with items
      security:
        - cookieAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Full order data
        "404":
          description: Order not found

  api/orders/profile/{profileId}:
    get:
      tags:
        - Orders
      summary: Get all orders by profile ID
      security:
        - cookieAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of orders

  api/orders/with-items/profile/{profileId}:
    get:
      tags:
        - Orders
      summary: Get all orders with items by profile ID
      security:
        - cookieAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of orders with their items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderWithItems"
              example:
                - id: 1
                  profile_id: 10
                  order_date: "2025-05-20T12:34:56.789Z"
                  total_amount: 299.99
                  order_status: "confirmed"
                  items:
                    - product_id: 101
                      quantity: 2
                      unit_price: 99.99
                    - product_id: 102
                      quantity: 1
                      unit_price: 100.01
                - id: 2
                  profile_id: 10
                  order_date: "2025-04-15T09:12:34.567Z"
                  total_amount: 149.95
                  order_status: "pending"
                  items:
                    - product_id: 103
                      quantity: 3
                      unit_price: 49.98
        "404":
          description: No orders with items found

  api/orders/history/{profileId}:
    get:
      tags:
        - Orders
      summary: Get detailed order history by profile ID
      security:
        - cookieAuth: []
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Order history with item details

  api/orders/{id}/status:
    patch:
      tags:
        - Orders
      summary: Update order status
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newStatus:
                  type: string
              required:
                - newStatus
      responses:
        "200":
          description: Status updated
        "404":
          description: Order not found

  api/orders/{id}/confirm:
    patch:
      tags:
        - Orders
      summary: Confirm an order and update product stock
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Order confirmed and stock updated
        "400":
          description: Invalid order state or insufficient stock
        "404":
          description: Order not found

  api/orders/product/{productId}:
    get:
      tags:
        - Orders
      summary: Get order items by product and optional date range
      security:
        - cookieAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
        - name: start
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: end
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Order items for given product and date range

  api/orders/active:
    get:
      tags:
        - Orders
      summary: Get the active (pending) order for the authenticated user
      security:
        - cookieAuth: []
      responses:
        "200":
          description: The active order for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  profile_id:
                    type: integer
                  order_date:
                    type: string
                    format: date-time
                  total_amount:
                    type: number
                  order_status:
                    type: string
                  order_items:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrderItem"
              example:
                id: 123
                profile_id: 10
                order_date: "2025-05-21T13:30:00.000Z"
                total_amount: 199.99
                order_status: "pending"
                order_items:
                  - product_id: 101
                    quantity: 2
                    unit_price: 99.99
        "404":
          description: No active order found
        "401":
          description: Unauthorized

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  schemas:
    OrderItem:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
        unit_price:
          type: number
      required:
        - product_id
        - quantity
        - unit_price

    NewOrder:
      type: object
      properties:
        profile_id:
          type: integer
        total_amount:
          type: number
        order_status:
          type: string
        order_items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
      required:
        - profile_id
        - total_amount
        - order_status
        - order_items

    OrderWithItems:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        order_date:
          type: string
          format: date-time
        total_amount:
          type: number
        order_status:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/OrderItem"
