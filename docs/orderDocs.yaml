paths:
  /:
    post:
      tags:
        - Orders
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewOrder"
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Invalid order data
        "500":
          description: Server error

  /{id}:
    get:
      tags:
        - Orders
      summary: Get order by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the order to retrieve
      responses:
        "200":
          description: Order found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found

    patch:
      tags:
        - Orders
      summary: Update order status
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_status:
                  type: string
                  example: confirmed
      responses:
        "200":
          description: Order status updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found

    delete:
      tags:
        - Orders
      summary: Delete an order
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Order deleted
        "404":
          description: Order not found

  /{id}/full:
    get:
      tags:
        - Orders
      summary: Get order with its items by order ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the order
      responses:
        "200":
          description: Order with items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderWithItems"
        "404":
          description: Order not found

  /profile/{profileId}:
    get:
      tags:
        - Orders
      summary: Get all orders by profile ID
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
          description: Profile ID
      responses:
        "200":
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "404":
          description: No orders found for profile

  /history/{profileId}:
    get:
      tags:
        - Orders
      summary: Get full order history with items for profile
      parameters:
        - in: path
          name: profileId
          required: true
          schema:
            type: integer
          description: Profile ID
      responses:
        "200":
          description: Full order history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItemHistory"
        "404":
          description: No order history found for profile

  /product/{productId}:
    get:
      tags:
        - Orders
      summary: Get order items for a product in date range
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Product ID
        - in: query
          name: start
          schema:
            type: string
            format: date
          description: Start date (YYYY-MM-DD)
        - in: query
          name: end
          schema:
            type: string
            format: date
          description: End date (YYYY-MM-DD)
      responses:
        "200":
          description: List of order items for product in date range
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItem"
        "404":
          description: No order items found for product in date range

  /{id}/confirm:
    patch:
      tags:
        - Orders
      summary: Confirm an order and update stock quantities
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Order ID
      responses:
        "200":
          description: Order confirmed and stock updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Order confirmed and stock updated
        "400":
          description: Invalid order status or insufficient stock
        "404":
          description: Order not found

components:
  schemas:
    NewOrder:
      type: object
      required:
        - profile_id
        - total_amount
        - order_status
        - order_items
      properties:
        profile_id:
          type: integer
        total_amount:
          type: number
          format: float
        order_status:
          type: string
          example: pending
        order_items:
          type: array
          items:
            $ref: "#/components/schemas/NewOrderItem"

    NewOrderItem:
      type: object
      required:
        - product_id
        - quantity
        - unit_price
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
          minimum: 1
        unit_price:
          type: number
          format: float

    Order:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        order_date:
          type: string
          format: date-time
        total_amount:
          type: number
          format: float
        order_status:
          type: string

    OrderWithItems:
      allOf:
        - $ref: "#/components/schemas/Order"
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: "#/components/schemas/OrderItem"

    OrderItem:
      type: object
      properties:
        id:
          type: integer
        order_id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
        unit_price:
          type: number
          format: float

    OrderItemHistory:
      type: object
      properties:
        id:
          type: integer
        profile_id:
          type: integer
        order_date:
          type: string
          format: date-time
        total_amount:
          type: number
          format: float
        order_status:
          type: string
        item_id:
          type: integer
        product_id:
          type: integer
        quantity:
          type: integer
        unit_price:
          type: number
          format: float
